name: Github Release CI

on:
  push:
    branches:
      - none
    tags:

  workflow_dispatch:
    inputs:
      tag:
        description: Tag
        default: 'latest'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'main' }}
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Prepare Version Values
        uses: cardinalby/export-env-action@v2
        id: versions
        with:
          envFile: '.env.versions'
          export: 'false'
      - 
        name: Create template directories
        id: prepare
        run: |
          mkdir mdcx-docker && cd mdcx-docker && cp -a ../gui-base/. .
          cp .env.sample .env
          cp gui-base-src.sample.yml docker-compose.yml
          rm Dockerfile*
          rm -rf rootfs*
          cd ..
          zip -q -r template-gui-base-src.zip mdcx-docker

          cd mdcx-docker
          cp -f gui-base-builtin.sample.yml docker-compose.yml
          cd ..
          zip -q -r template-gui-base-buiultin.zip mdcx-docker

          rm -rf mdcx-docker

          mkdir mdcx-docker && cd mdcx-docker && cp -a ../webtop-base/. .
          cp .env.sample .env
          cp webtop-base-src.sample.yml docker-compose.yml
          rm Dockerfile*
          rm -rf rootfs*
          cd ..
          zip -q -r template-webtop-base-src.zip mdcx-docker

          cd mdcx-docker
          cp -f webtop-base-builtin.sample.yml docker-compose.yml
          cd ..
          zip -q -r template-webtop-base-builtin.zip mdcx-docker

          rm -rf mdcx-docker

          TAG=
          if [[ "${{ github.event_name }}" == "tag" ]]; then
            TAG=${{ github.ref_name }}
          fi
          FALLBACK_TAG=${{ github.event.inputs.tag }}
          TAG=${TAG-${FALLBACK_TAG}}
          echo "TAG=$TAG" >> $GITHUB_OUTPUT
      - 
        name: Create latest release
        uses: ncipollo/release-action@v1
        with:
          name: "latest"
          tag: "latest"
          allowUpdates: true
          removeArtifacts: true
          replacesArtifacts: true
          artifacts: "template-*.zip"

        