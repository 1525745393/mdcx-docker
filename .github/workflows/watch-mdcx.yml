name: Watch MDCx Release

on:
  push:
    branches:
      - none
  schedule:
    # 每45分钟
    - cron: '*/45 * * * *'
  
  workflow_dispatch:
    inputs:
      isDev:
        description: Is Dev
        type: boolean

env:
  RELEASE_URL: 'https://api.github.com/repos/anyabc/something/releases/latest'
  ENABLE_WATCH: ${{ secrets.ENABLE_WATCH_MDCX_RELEASE }}
  GITHUB_CURRENT_REPO: ${{ github.event.repository.name }}
  GITHUB_API_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
  GITHUB_OWNER: ${{ github.repository_owner }}

jobs:
  # 检查是否有新版本
  watch:
    runs-on: ubuntu-latest
    steps:
      -
        run: |
          # TODO 在job上貌似不能读取env或者secrets

          if [[ "${{ env.ENABLE_WATCH }}" != "true" && "${{ github.event.inputs.isDev }}" != "true" ]]; then
            exit 1
          fi
      - 
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Install apt packages
        run: sudo apt-get install -y jq
      -
        name: Check if there is a new MDCx release
        id: check
        env:
          GITHUB_CURRENT_REPO: ${{ env.GITHUB_CURRENT_REPO }}
          GITHUB_API_TOKEN: ${{ env.GITHUB_API_TOKEN }}
          CURL_VERBOSE: '-s'
        run: |
          source scripts/base.sh
          source scripts/github.sh

          VAR_VERSION="MDCX_LATEST_VERSION"
          VAR_TIME="MDCX_LATEST_TIME"

          # 获取最新版本信息，返回值为数组，第一个元素为版本号，第二个元素为更新时间
          getNewInfo() {
            local content=$(curl -s "${{ env.RELEASE_URL }}")
            local asset=$(echo $content | jq '.assets'| jq 'map(select(.browser_download_url | contains("-py-")))' | jq '.[0]')

            if [[ -z "$asset" ]]; then
              echo "❌ 查找不到符合条件的asset！"
              return 1
            fi

            # https://gitbook.curiouser.top/origin/linux-jq.html#%E4%B8%89%E3%80%81jq%E5%91%BD%E4%BB%A4%E5%8F%82%E6%95%B0
            # -r    如果过滤的结果是一个字符串，那么直接写到标准输出（去掉字符串的引号）;
            local archiveUrl=$(echo $asset | jq -r '.browser_download_url')
            local updatedAt=$(echo $asset | jq -r '.updated_at')

            if [[ -z "$archiveUrl" ]]; then
              echo "❌ 获取下载链接失败！"
              return 1
            fi

            if [[ -z "$updatedAt" ]]; then
              echo "❌ 获取更新时间失败！"
              return 1
            fi

            local archiveFullName=$(echo $archiveUrl | grep -oi 'MDCx-py-[a-z0-9]\+.[a-z]\+')
            local archiveVersion=$(echo $archiveFullName | sed 's/MDCx-py-//g' | sed 's/\.[^.]*$//')

            local info=("$archiveVersion" "$updatedAt")
            echo "${info[@]}"
            return 0
          }

          newVersion=""
          newTime=""
          hasNewVersion=false

          # 获取最新版本信息
          info=($(getNewInfo))
          newVersion=${info[0]}
          newTime=${info[1]}

          # 获取已记录的版本信息
          latestVersion=$(getVariable $VAR_VERSION)
          latestTime=$(getVariable $VAR_TIME)
          echo "📦 已记录的最新版本：$latestVersion"
          echo "📅 已记录的更新时间：$latestTime"

          # 任意一个变量为空，都不视为新版本
          if [[ -z "$latestVersion" || -z "$latestTime" ]]; then
            hasNewVersion=false
          else
            # 如果版本号或者更新时间不同，视为新版本
            if [[ "$newVersion" != "$latestVersion" || "$newTime" != "$latestTime" ]]; then
              hasNewVersion=true
            else
              hasNewVersion=false
            fi
          fi


          # 输出到GITHUB_OUTPUT 
          echo "newVersion=$newVersion" >> $GITHUB_OUTPUT
          echo "newTime=$newTime" >> $GITHUB_OUTPUT
          echo "hasNewVersion=$hasNewVersion" >> $GITHUB_OUTPUT
          echo "latestVersion=$latestVersion" >> $GITHUB_OUTPUT
          echo "latestTime=$latestTime" >> $GITHUB_OUTPUT
   
          if [[ "$hasNewVersion" == "true" ]]; then
            echo "🎉 发现新版本！"
            echo "📦 新版本号：$newVersion"
            echo "📅 更新时间：$newTime"

            updateVariable $VAR_TIME "$newTime"

            updateVariable $VAR_VERSION "$newVersion"

            exit 0
          else
            echo "🔎 没有新版本，等待下一次检查..."
          fi
      -
        uses: appleboy/telegram-action@master
        if: ${{ steps.check.outputs.hasNewVersion == 'true' }}
        with:
          to: ${{ secrets.TELE_CHAT_ID }}
          token: ${{ secrets.TELE_BOT_TOKEN }}
          message: |
            🎉 MDCx新版本！
            📦 新版本号：${{ steps.check.outputs.newVersion }}
            📅 更新时间：${{ steps.check.outputs.newTime }}
            🔗 发布链接：https://github.com/anyabc/something/releases/tag/MDCx
      # -
      #   uses: appleboy/telegram-action@master
      #   if: ${{ steps.check.outputs.hasNewVersion == 'false' }}
      #   with:
      #     to: ${{ secrets.TELE_CHAT_ID }}
      #     token: ${{ secrets.TELE_BOT_TOKEN }}
      #     message: |
      #       🔎 没有新版本，等待下一次检查...
  
